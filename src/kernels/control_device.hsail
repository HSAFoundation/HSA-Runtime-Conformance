/*
 * =============================================================================
 *   HSA Runtime Conformance Release License
 * =============================================================================
 * The University of Illinois/NCSA
 * Open Source License (NCSA)
 *
 * Copyright (c) 2014, Advanced Micro Devices, Inc.
 * All rights reserved.
 *
 * Developed by:
 *
 *                 AMD Research and AMD HSA Software Development
 *
 *                 Advanced Micro Devices, Inc.
 *
 *                 www.amd.com
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to
 * deal with the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sublicense,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 *  - Redistributions of source code must retain the above copyright notice,
 *    this list of conditions and the following disclaimers.
 *  - Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimers in
 *    the documentation and/or other materials provided with the distribution.
 *  - Neither the names of <Name of Development Group, Name of Institution>,
 *    nor the names of its contributors may be used to endorse or promote
 *    products derived from this Software without specific prior written
 *    permission.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
 * THE CONTRIBUTORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS WITH THE SOFTWARE.
 *
 */

module &control_device:1:0:$full:$large:$default;

/*
 *  Kernels: control_device 
 *
 *  Description: The control_device kernel has definations of several
 *  control directives for low-level performance tuning.
 *
 *  Psuedo code:
 *
 *  __kernel void no_op() { 
 *     return;
 *  }
 *
 */

decl prog function &abort()();

decl prog function &control_device_fn()();

prog kernel &__control_device_kernel() {
@__control_device_kernel_entry:
	// BB#0:
    // Start the argument scope 
    {
     call &control_device_fn()();
    }
	ret;
};

prog function &control_device_fn()()
{
    maxdynamicgroupsize 4096; // set to 4K
   //-----------------------------------------------------------------------------------------------------------------------
   // Must be an immediate value greater than 0, or WAVESIZE.
   // If multiple control directives are present in the kernel or the functions it calls, they must all have the same values.
   // The value specified must be greater than or equal to the product of the values specified by requiredgridsize
   //-----------------------------------------------------------------------------------------------------------------------
   maxflatgridsize 1000;
   maxflatgridsize 1000;
   //-----------------------------------------------------------------------------------------------------------------------
   // Must be an immediate value greater than 0, or WAVESIZE.
   // If multiple control directives are present in the kernel or the functions it calls, they must all have the same values.
   // The value specified must also be greater than or equal to the product of the values specified by requiredworkgroupsize.
   //-----------------------------------------------------------------------------------------------------------------------
   maxflatworkgroupsize 100;
   maxflatworkgroupsize 100;
   //-----------------------------------------------------------------------------------------------------------------------
   // Must be an immediate value with the value 1, 2, or 3.
   // If multiple control directives are present in the kernel or the functions it calls, they must all have the same values.
   // must be consistent with requiredgridsize and requiredworkgroupsize:
   // if requireddim = 1, => requiredgridsize X, 1, 1; requiredworkgroupsize X, 1, 1;
   // if requireddim = 2, => requiredgridsize X, Y, 1; requiredworkgroupsize X, Y, 1;
   //-----------------------------------------------------------------------------------------------------------------------
   requireddim 3;
   requireddim 3;
   //-----------------------------------------------------------------------------------------------------------------------
   // Must be an immediate value greater than 0, or WAVESIZE.
   // If multiple control directives are present in the kernel or the functions it calls, they must all have the same values.
   // The product of the values must be less than or equal to value specified by maxflatgridsize
   // Must be consistent with requireddim
   //-----------------------------------------------------------------------------------------------------------------------
   requiredgridsize 1000, 1000, 1000;
   requiredgridsize 1000, 1000, 1000;
   //-----------------------------------------------------------------------------------------------------------------------
   // Must be an immediate value greater than 0, or WAVESIZE.
   // If multiple control directives are present in the kernel or the functions it calls, they must all have the same values.
   // The product of the values must be less than or equal to any value specified by maxflatworkgroupsize .
   // Must be consistent with requireddim
   //-----------------------------------------------------------------------------------------------------------------------
   requiredworkgroupsize 100, 100, 100;
   requiredworkgroupsize 100, 100, 100;
   //-----------------------------------------------------------------------------------------------------------------------

ret;
};

